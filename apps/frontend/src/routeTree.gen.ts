/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardOverviewRouteImport } from './routes/dashboard/overview'
import { Route as AuthUnauthorizedRouteImport } from './routes/auth/unauthorized'
import { Route as AuthRegisterRouteImport } from './routes/auth/register'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as DashboardOrdersIndexRouteImport } from './routes/dashboard/orders/index'
import { Route as DashboardCustomersIndexRouteImport } from './routes/dashboard/customers/index'
import { Route as DashboardAnalyticsIndexRouteImport } from './routes/dashboard/analytics/index'
import { Route as DashboardOrdersCreateRouteImport } from './routes/dashboard/orders/create'
import { Route as DashboardOrdersOrderIdRouteImport } from './routes/dashboard/orders/$orderId'
import { Route as DashboardInventoryVendorsIndexRouteImport } from './routes/dashboard/inventory/vendors/index'
import { Route as DashboardInventoryProductsIndexRouteImport } from './routes/dashboard/inventory/products/index'
import { Route as DashboardInventoryCategoryIndexRouteImport } from './routes/dashboard/inventory/category/index'
import { Route as DashboardInventoryProductsCreateRouteImport } from './routes/dashboard/inventory/products/create'
import { Route as DashboardInventoryProductsProductIdIndexRouteImport } from './routes/dashboard/inventory/products/$productId/index'
import { Route as DashboardInventoryProductsProductIdEditRouteImport } from './routes/dashboard/inventory/products/$productId/edit'

const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardOverviewRoute = DashboardOverviewRouteImport.update({
  id: '/overview',
  path: '/overview',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const AuthUnauthorizedRoute = AuthUnauthorizedRouteImport.update({
  id: '/auth/unauthorized',
  path: '/auth/unauthorized',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardOrdersIndexRoute = DashboardOrdersIndexRouteImport.update({
  id: '/orders/',
  path: '/orders/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardCustomersIndexRoute = DashboardCustomersIndexRouteImport.update({
  id: '/customers/',
  path: '/customers/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardAnalyticsIndexRoute = DashboardAnalyticsIndexRouteImport.update({
  id: '/analytics/',
  path: '/analytics/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardOrdersCreateRoute = DashboardOrdersCreateRouteImport.update({
  id: '/orders/create',
  path: '/orders/create',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardOrdersOrderIdRoute = DashboardOrdersOrderIdRouteImport.update({
  id: '/orders/$orderId',
  path: '/orders/$orderId',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardInventoryVendorsIndexRoute =
  DashboardInventoryVendorsIndexRouteImport.update({
    id: '/inventory/vendors/',
    path: '/inventory/vendors/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardInventoryProductsIndexRoute =
  DashboardInventoryProductsIndexRouteImport.update({
    id: '/inventory/products/',
    path: '/inventory/products/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardInventoryCategoryIndexRoute =
  DashboardInventoryCategoryIndexRouteImport.update({
    id: '/inventory/category/',
    path: '/inventory/category/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardInventoryProductsCreateRoute =
  DashboardInventoryProductsCreateRouteImport.update({
    id: '/inventory/products/create',
    path: '/inventory/products/create',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardInventoryProductsProductIdIndexRoute =
  DashboardInventoryProductsProductIdIndexRouteImport.update({
    id: '/inventory/products/$productId/',
    path: '/inventory/products/$productId/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardInventoryProductsProductIdEditRoute =
  DashboardInventoryProductsProductIdEditRouteImport.update({
    id: '/inventory/products/$productId/edit',
    path: '/inventory/products/$productId/edit',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/unauthorized': typeof AuthUnauthorizedRoute
  '/dashboard/overview': typeof DashboardOverviewRoute
  '/dashboard/orders/$orderId': typeof DashboardOrdersOrderIdRoute
  '/dashboard/orders/create': typeof DashboardOrdersCreateRoute
  '/dashboard/analytics': typeof DashboardAnalyticsIndexRoute
  '/dashboard/customers': typeof DashboardCustomersIndexRoute
  '/dashboard/orders': typeof DashboardOrdersIndexRoute
  '/dashboard/inventory/products/create': typeof DashboardInventoryProductsCreateRoute
  '/dashboard/inventory/category': typeof DashboardInventoryCategoryIndexRoute
  '/dashboard/inventory/products': typeof DashboardInventoryProductsIndexRoute
  '/dashboard/inventory/vendors': typeof DashboardInventoryVendorsIndexRoute
  '/dashboard/inventory/products/$productId/edit': typeof DashboardInventoryProductsProductIdEditRoute
  '/dashboard/inventory/products/$productId': typeof DashboardInventoryProductsProductIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/unauthorized': typeof AuthUnauthorizedRoute
  '/dashboard/overview': typeof DashboardOverviewRoute
  '/dashboard/orders/$orderId': typeof DashboardOrdersOrderIdRoute
  '/dashboard/orders/create': typeof DashboardOrdersCreateRoute
  '/dashboard/analytics': typeof DashboardAnalyticsIndexRoute
  '/dashboard/customers': typeof DashboardCustomersIndexRoute
  '/dashboard/orders': typeof DashboardOrdersIndexRoute
  '/dashboard/inventory/products/create': typeof DashboardInventoryProductsCreateRoute
  '/dashboard/inventory/category': typeof DashboardInventoryCategoryIndexRoute
  '/dashboard/inventory/products': typeof DashboardInventoryProductsIndexRoute
  '/dashboard/inventory/vendors': typeof DashboardInventoryVendorsIndexRoute
  '/dashboard/inventory/products/$productId/edit': typeof DashboardInventoryProductsProductIdEditRoute
  '/dashboard/inventory/products/$productId': typeof DashboardInventoryProductsProductIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/unauthorized': typeof AuthUnauthorizedRoute
  '/dashboard/overview': typeof DashboardOverviewRoute
  '/dashboard/orders/$orderId': typeof DashboardOrdersOrderIdRoute
  '/dashboard/orders/create': typeof DashboardOrdersCreateRoute
  '/dashboard/analytics/': typeof DashboardAnalyticsIndexRoute
  '/dashboard/customers/': typeof DashboardCustomersIndexRoute
  '/dashboard/orders/': typeof DashboardOrdersIndexRoute
  '/dashboard/inventory/products/create': typeof DashboardInventoryProductsCreateRoute
  '/dashboard/inventory/category/': typeof DashboardInventoryCategoryIndexRoute
  '/dashboard/inventory/products/': typeof DashboardInventoryProductsIndexRoute
  '/dashboard/inventory/vendors/': typeof DashboardInventoryVendorsIndexRoute
  '/dashboard/inventory/products/$productId/edit': typeof DashboardInventoryProductsProductIdEditRoute
  '/dashboard/inventory/products/$productId/': typeof DashboardInventoryProductsProductIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/auth/login'
    | '/auth/register'
    | '/auth/unauthorized'
    | '/dashboard/overview'
    | '/dashboard/orders/$orderId'
    | '/dashboard/orders/create'
    | '/dashboard/analytics'
    | '/dashboard/customers'
    | '/dashboard/orders'
    | '/dashboard/inventory/products/create'
    | '/dashboard/inventory/category'
    | '/dashboard/inventory/products'
    | '/dashboard/inventory/vendors'
    | '/dashboard/inventory/products/$productId/edit'
    | '/dashboard/inventory/products/$productId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/auth/login'
    | '/auth/register'
    | '/auth/unauthorized'
    | '/dashboard/overview'
    | '/dashboard/orders/$orderId'
    | '/dashboard/orders/create'
    | '/dashboard/analytics'
    | '/dashboard/customers'
    | '/dashboard/orders'
    | '/dashboard/inventory/products/create'
    | '/dashboard/inventory/category'
    | '/dashboard/inventory/products'
    | '/dashboard/inventory/vendors'
    | '/dashboard/inventory/products/$productId/edit'
    | '/dashboard/inventory/products/$productId'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/auth/login'
    | '/auth/register'
    | '/auth/unauthorized'
    | '/dashboard/overview'
    | '/dashboard/orders/$orderId'
    | '/dashboard/orders/create'
    | '/dashboard/analytics/'
    | '/dashboard/customers/'
    | '/dashboard/orders/'
    | '/dashboard/inventory/products/create'
    | '/dashboard/inventory/category/'
    | '/dashboard/inventory/products/'
    | '/dashboard/inventory/vendors/'
    | '/dashboard/inventory/products/$productId/edit'
    | '/dashboard/inventory/products/$productId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  AuthUnauthorizedRoute: typeof AuthUnauthorizedRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/overview': {
      id: '/dashboard/overview'
      path: '/overview'
      fullPath: '/dashboard/overview'
      preLoaderRoute: typeof DashboardOverviewRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/auth/unauthorized': {
      id: '/auth/unauthorized'
      path: '/auth/unauthorized'
      fullPath: '/auth/unauthorized'
      preLoaderRoute: typeof AuthUnauthorizedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/orders/': {
      id: '/dashboard/orders/'
      path: '/orders'
      fullPath: '/dashboard/orders'
      preLoaderRoute: typeof DashboardOrdersIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/customers/': {
      id: '/dashboard/customers/'
      path: '/customers'
      fullPath: '/dashboard/customers'
      preLoaderRoute: typeof DashboardCustomersIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/analytics/': {
      id: '/dashboard/analytics/'
      path: '/analytics'
      fullPath: '/dashboard/analytics'
      preLoaderRoute: typeof DashboardAnalyticsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/orders/create': {
      id: '/dashboard/orders/create'
      path: '/orders/create'
      fullPath: '/dashboard/orders/create'
      preLoaderRoute: typeof DashboardOrdersCreateRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/orders/$orderId': {
      id: '/dashboard/orders/$orderId'
      path: '/orders/$orderId'
      fullPath: '/dashboard/orders/$orderId'
      preLoaderRoute: typeof DashboardOrdersOrderIdRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/inventory/vendors/': {
      id: '/dashboard/inventory/vendors/'
      path: '/inventory/vendors'
      fullPath: '/dashboard/inventory/vendors'
      preLoaderRoute: typeof DashboardInventoryVendorsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/inventory/products/': {
      id: '/dashboard/inventory/products/'
      path: '/inventory/products'
      fullPath: '/dashboard/inventory/products'
      preLoaderRoute: typeof DashboardInventoryProductsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/inventory/category/': {
      id: '/dashboard/inventory/category/'
      path: '/inventory/category'
      fullPath: '/dashboard/inventory/category'
      preLoaderRoute: typeof DashboardInventoryCategoryIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/inventory/products/create': {
      id: '/dashboard/inventory/products/create'
      path: '/inventory/products/create'
      fullPath: '/dashboard/inventory/products/create'
      preLoaderRoute: typeof DashboardInventoryProductsCreateRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/inventory/products/$productId/': {
      id: '/dashboard/inventory/products/$productId/'
      path: '/inventory/products/$productId'
      fullPath: '/dashboard/inventory/products/$productId'
      preLoaderRoute: typeof DashboardInventoryProductsProductIdIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/inventory/products/$productId/edit': {
      id: '/dashboard/inventory/products/$productId/edit'
      path: '/inventory/products/$productId/edit'
      fullPath: '/dashboard/inventory/products/$productId/edit'
      preLoaderRoute: typeof DashboardInventoryProductsProductIdEditRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
  }
}

interface DashboardRouteRouteChildren {
  DashboardOverviewRoute: typeof DashboardOverviewRoute
  DashboardOrdersOrderIdRoute: typeof DashboardOrdersOrderIdRoute
  DashboardOrdersCreateRoute: typeof DashboardOrdersCreateRoute
  DashboardAnalyticsIndexRoute: typeof DashboardAnalyticsIndexRoute
  DashboardCustomersIndexRoute: typeof DashboardCustomersIndexRoute
  DashboardOrdersIndexRoute: typeof DashboardOrdersIndexRoute
  DashboardInventoryProductsCreateRoute: typeof DashboardInventoryProductsCreateRoute
  DashboardInventoryCategoryIndexRoute: typeof DashboardInventoryCategoryIndexRoute
  DashboardInventoryProductsIndexRoute: typeof DashboardInventoryProductsIndexRoute
  DashboardInventoryVendorsIndexRoute: typeof DashboardInventoryVendorsIndexRoute
  DashboardInventoryProductsProductIdEditRoute: typeof DashboardInventoryProductsProductIdEditRoute
  DashboardInventoryProductsProductIdIndexRoute: typeof DashboardInventoryProductsProductIdIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardOverviewRoute: DashboardOverviewRoute,
  DashboardOrdersOrderIdRoute: DashboardOrdersOrderIdRoute,
  DashboardOrdersCreateRoute: DashboardOrdersCreateRoute,
  DashboardAnalyticsIndexRoute: DashboardAnalyticsIndexRoute,
  DashboardCustomersIndexRoute: DashboardCustomersIndexRoute,
  DashboardOrdersIndexRoute: DashboardOrdersIndexRoute,
  DashboardInventoryProductsCreateRoute: DashboardInventoryProductsCreateRoute,
  DashboardInventoryCategoryIndexRoute: DashboardInventoryCategoryIndexRoute,
  DashboardInventoryProductsIndexRoute: DashboardInventoryProductsIndexRoute,
  DashboardInventoryVendorsIndexRoute: DashboardInventoryVendorsIndexRoute,
  DashboardInventoryProductsProductIdEditRoute:
    DashboardInventoryProductsProductIdEditRoute,
  DashboardInventoryProductsProductIdIndexRoute:
    DashboardInventoryProductsProductIdIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  AuthUnauthorizedRoute: AuthUnauthorizedRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
